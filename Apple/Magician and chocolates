long long int mod=1000000007;
int Solution::nchoc(int A, vector<int> &B) {
    int N = B.size();
	int K = A;
	long long int ans = 0;
	priority_queue<int> heap(B.begin(),B.end());
	while(K--){
		long long int max_elem = heap.top();
		ans += max_elem;
		ans = ans % mod;
		heap.pop();
		heap.push((int)(max_elem/2));
	}   
	return ans;
}
int m=1000000007;
int Solution::nchoc(int A, vector<int> &B) {
    long long ans=0;
    priority_queue<long long>q;
    for(int i=0;i<B.size();i++)
    q.push(B[i]);
    
    while(A--)
    {
        long long  t=q.top();
        q.pop();
        ans=(ans+t)%m;
        q.push(t/2);
    }
    return ans;
}
