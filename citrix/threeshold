int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) 
	{
		/*********converting into a matrix ************************************/

		vector<vector<int>> v(n,vector<int>(n,INT_MAX/2));
		for(auto a:edges)
		{
			v[a[0]][a[1]]=a[2];
			v[a[1]][a[0]]=a[2];
		}
		for(int i=0;i<n;i++)
		{
			v[i][i]=0;
		}

		// All pair shortest path Algo(floyd warshall algorithm)
		/*************************************************************************/

		for(int k=0;k<n;k++)
		{
			for(int i=0;i<n;i++)
			{
				for(int j=0;j<n;j++)
				{
					if(v[i][j]>v[i][k]+v[k][j])
					{
						v[i][j]=v[i][k]+v[k][j];
						v[j][i]=v[i][k]+v[k][j];
					}

				}
			}
		}
		/************************************************************************/
		int count=INT_MAX;
		int ans=-1;
		for(int i=0;i<n;i++)
		{
			int c=0;
			for(int j=0;j<n;j++)
			{
				if(v[i][j]<=distanceThreshold)
				{
					c++;
				}
			}
			if(c<count||(c==count&&i>ans))
			{
				count=c;
				ans=i;
			}
		}
		return ans;

	}
