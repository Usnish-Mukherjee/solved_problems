#include <bits/stdc++.h>
using namespace std;
struct node{
int data;
node *left,*right;
node(int a)
{
    data=a;
    left=right=NULL;
}
};
int p;
void inor(node* temp,int inorder[])
{
    if(temp==NULL)
        return;
    inor(temp->left,inorder);
    inorder[p++]=temp->data;
    inor(temp->right,inorder);

}
void util(int a[],int n)
{
    queue<node*> q;
    node* temp=new node(a[0]);
    q.push(temp);
    int count=0;
    while(!q.empty())
    {
        node* r=q.front();
        q.pop();
        if(count*2+1<n && a[count*2+1]!=-1)
            {
                r->left=new node(a[count*2+1]);
                q.push(r->left);
            }
        if(count*2+2<n && a[count*2+2]!=-1)
            {
                r->right=new node(a[count*2+2]);
                q.push(r->right);
            }
                    count++;
    }
  int inorder[n];
  p=0;
  inor(temp,inorder);
  for(int i=0;i<p;i++)
  {
      if(i-1>=0 && i+1<p)
        cout<<inorder[i-1]+inorder[i+1]<<" ";
      else if(i-1>=0)
        cout<<inorder[i-1]<<" ";
      else
        cout<<inorder[i+1]<<" ";
  }
}
int main() {
 int n;
 cin>>n;
 int a[n];
 for(int i=0;i<n;i++)
    cin>>a[i];
    
util(a,n);

}
