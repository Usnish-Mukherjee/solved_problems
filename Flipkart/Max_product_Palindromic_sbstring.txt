#include <iostream>
#include<cstring>
using namespace std;
int lps(string s)
{
    int n=s.size();
    int dp[n][n];
    memset(dp,0,sizeof(dp));
    for(int i=0;i<n;i++)
    dp[i][i]=1;
    int len=2;
    for(len=2;len<=n;len++){
        for(int i=0;i<n-len+1;i++)
       {
          int j=i+len-1;
          if(s[i]==s[j])
         dp[i][j]=2+dp[i+1][j-1];
         else
         dp[i][j]=max(dp[i+1][j],dp[i][j-1]);
        
       }
    }
    int max_prod=1;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n-1;j++)
        {
            max_prod=max(max_prod,dp[i][j]*dp[j+1][n-1]);
        }
    }
    return max_prod;
}
int main() {
    string s;
	cin>>s;
	cout<<lps(s)<<endl;
	return 0;
}